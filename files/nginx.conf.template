# worker_processes command is letting our virtual server know many workers to spawn once it has become bound to the proper IP and port.
# It is common practice to run 1 worker process per core. Also recommended setting this directive to auto to achieve that.
worker_processes 1;
daemon off; # Prevent forking. Prevents the container from halting.


pid /tmp/nginx.pid;
error_log /var/log/nginx/error.log;


events {
  # worker_connections - The maximum number of connections that each worker process can handle simultaneously. The default is 512.
  # defaults
}

http {
#  ssl_certificate     %ssl_certificate%;
 # ssl_certificate_key %ssl_certificate_key%;
 # ssl_ciphers         EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH;
 # ssl_protocols       TLSv1.1 TLSv1.2;

  include /etc/nginx/mime.types;
  default_type application/octet-stream;
  access_log /var/log/nginx/access.log combined;
  client_header_buffer_size    1k;
  large_client_header_buffers  2 1k;

  upstream gunicorn {
    server unix:/tmp/gunicorn.sock;
  }

  server {

    # listen 8443 ssl http2 deferred;
    # listen 8080 deferred;
    # listen 443 ssl default_server;

    listen %ssl_port% ssl http2 deferred;
    listen %port% deferred;

    client_max_body_size 10m;  #The maximum allowed size for a client request.

    keepalive_timeout 5; # How long an idle keepalive connection remains open.

    # model/execute is the same as model/predict and is here for backwards compatibility.
    location ~ ^/(healthcheck|model/describe|model/predict|model/execute|model/explain) {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_pass http://gunicorn;
    }

    location / {
      return 404 "{\"error\": \"Not found\"}";
    }
  }
}
